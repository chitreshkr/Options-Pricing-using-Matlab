function [ output ] = FLP_LoadFuzzyRules( FuzzySet, file_dir )
% FLP_LoadFuzzyRules Reads the fuzzy rules from comma delimited text file

%   This function reads in a CSV delimited text file containing the fuzzy
%   rules and creates a matrix with the item values in a column
%   corresponding to the order of the sets in FuzzySet
%
% Input
% FuzzySet - a FuzzySet object generated by FLP_LoadFuzzySets
% file_dir - the path and filename of the CSV file
%
% Output
% output -  a FuzzyRules object
%
% Author: Jim Kunce (jdk_acct@yahoo.com)

% The number of columns for this input is variable based on the number of
% fuzzy sets in the data. Create a format string that 
% will read in the set count and create a file format specification
input_spec = '%s';
N = FuzzySet.Count;
for i = 1:N-1
    input_spec = strcat(input_spec,' %s');
end   
 
% read the CSV file
fid = fopen(file_dir);
fid_read = textscan(fid, input_spec, 'delimiter',',');
fclose(fid);
in_ct = size(fid_read{1,1},1)-1; % the number of fuzzy rules to be read
output = zeros(in_ct,N); %pre-allocate the output

for i = 1:N
    set_num = find(strcmp(fid_read{1,i}{1,1},FuzzySet.Set)); % find the set number
    if isempty(set_num) % if unable to find match return error message
        fprintf('ERROR LOADING FUZZY RULES: Unable to find matching set for "%s" column\n\n',fid_read{1,i}{1,1});
        output = [];
        return;
    end

    for j = 2:in_ct+1
        find_item = fid_read{1,i}{j,1}; % item to find
        item_num = find(strcmp(find_item,FuzzySet.Items{set_num,1})); % find the item number
        if size(item_num,1)==0 % if the item was not found
            output(j-1,set_num) = 0; % use 0 for blanks
        else
            output(j-1,set_num) = item_num; % else save the item number
        end
    end
end

end


