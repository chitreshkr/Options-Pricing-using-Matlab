function [ crispOutput, outputMF, X ] = FLP_DeFuzzification( ConsqMemberGrades, FuzzySet, N )
% FLP_DeFuzzification Calculates the crisp values using center of area
%
% Mamdani's fuzzy implication method is used to combine the membership
% functions of the output set which is the combined conclusion for all the
% rules. This pointwise function is then defuzzified  to a single value
% using the Center of Area (COA) method.
%
% Input
% ConsqMemberGrades - a consequent membership grade object generated by FLP_FuzzyRuleEval
% FuzzySet - a FuzzySet object generated by FLP_LoadFuzzySets
% N - the number of increments in the output range used in the COA calc
% 
% Output
% crispOutput - the crisp output values
% outputMF - columns of pointwise membership functions (each of length N)
%            corresponding to each crisp input
% X - the vector of output values at which the pointwise membership
%     functions are evaluated
%
% Author: Jim Kunce (jdk_acct@yahoo.com)

inputCt = size(ConsqMemberGrades,1); % the number of crisp input values
outputIDX = size(FuzzySet.Set,1); % the output set will be the last set in the set object
outputItemCt = FuzzySet.ItemCount(outputIDX); % the number of items in the output set

X = (FuzzySet.Range(outputIDX,1):(FuzzySet.Range(outputIDX,2)-FuzzySet.Range(outputIDX,1))/(N-1):FuzzySet.Range(outputIDX,2))'; % the X increments
crispOutput = zeros(inputCt,1); % pre-allocate the crisp output
outputMF = zeros(N,inputCt); % pre-allocate the output membership function storage
outputMFs = zeros(N,outputItemCt); % pre-allocate the output item membership function storage

for i = 1:inputCt % loop thru each crisp input
    
    for j = 1:outputItemCt
        
        % For each output item we want to take the minimum of the
        % trapezoidal MF value and the consequent membership grade for that
        % item. This will be the output item's pointwise membership
        % function. 
        itemGrade = repmat(ConsqMemberGrades(i,j),N,1); % a vector with the consequent membership grades
        itemMF = FLP_trapzMF(X,FuzzySet.Parms{outputIDX}(j,:)); % a vector with the trapezoidal MF values
        outputMFs(:,j) = min([itemGrade,itemMF],[],2); % store the minimum of the two vectors
        
    end
    
    % The combined pointwise membership function for the output set is then
    % found by taking the maximum MF value for all output items at each
    % point
    outputMF(:,i) = max(outputMFs,[],2);
    
    % The COA calculation is made using the combined pointwise membership
    % function and trapezoidal numerical integration.
    crispOutput(i,1) = trapz(X,(X.*outputMF(:,i))) / trapz(X,outputMF(:,i));
    
end

end

