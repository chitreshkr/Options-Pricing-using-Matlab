function [ output ] = FLP_3DMFplot( FuzzySet, FuzzyRules, FS1, FS2, N )
% FLP_3DMFplot Plots the crisp output surface vs two of the fuzzy sets
%   The function creates a surface plot of the crisp output with the fussy
%   set feature 1 (FS1) along the X axis, the fuzzy set feature 2 (FS2)
%   along the y axis and the crisp output on the z axis. The data and
%   labels used to generate the chart are returned from the output of the
%   function.
%
% Input
% FuzzySet - a FuzzySet object generated by FLP_LoadFuzzySets
% FuzzyRules - a fuzzy rules object generated by FLP_LoadFuzzyRules
% FS1 - the number of the fuzzy set to plot on the x axis
% FS2 - the number of the fuzzy set to plot on the y axis
% N - the NxN size of the meshgrid to create for the crisp output
%
% Output
% output -  a struct object with the data and chart labels
%
% Author: Jim Kunce (jdk_acct@yahoo.com)

% This section creates the grid of each N evenly spaced points (ESP) across 
% the range of FS1 and FS2 in the FLP CrispInput format. This is
% accomplished for FS1 by appending a list of the ESP's N times while
% circularly shifting the position of the ESP's by one for each append.
% When this is concatenated with N replicates of the FS2 ESP's it
% represents the complete set of points on the surface.

X1 = (FuzzySet.Range(FS1,1):(FuzzySet.Range(FS1,2)-FuzzySet.Range(FS1,1))/(N-1):FuzzySet.Range(FS1,2))'; % the ESP's for FS1
I1 = (1:N)'; % the position index of the ESP's
X1C = repmat(X1,N,1); % the list to append (store) the values
I1C = repmat(I1,N,1); % the list to append (store) the indexes 
for i = 1:(N-1) % shift and store the ESP values and indexes
    X1 = circshift(X1,1);
    X1C(i*N+1:i*N+N,1) = X1;
    I1 = circshift(I1,1);
    I1C(i*N+1:i*N+N,1) = I1;
end
X1 = circshift(X1,1); % shift them back into the starting position
I1 = circshift(I1,1);

% Replicate the FS2 ESP's N times
X2 = (FuzzySet.Range(FS2,1):(FuzzySet.Range(FS2,2)-FuzzySet.Range(FS2,1))/(N-1):FuzzySet.Range(FS2,2))';
I2 = (1:N)';
X2C = repmat(X2,N,1);
I2C = repmat(I2,N,1);

NC = size(X1C,1); % the number of combinations

CrispInput = zeros(NC,FuzzySet.Count-1);

% Look thru the fuzzy sets and create the CrispInput table. For fuzzy sets
% other than FS1 or FS2, use the mean value for the set
for i = 1:FuzzySet.Count-1
   if i == FS1
        CrispInput(:,i) = X1C;
   elseif i == FS2
        CrispInput(:,i) = X2C;
   else
        CrispInput(:,i) = repmat((FuzzySet.Range(i,2)-FuzzySet.Range(i,1))/2,NC,1);
   end
end

% Calculate the crisp output based on the FLP functions
AntMemberGrades = FLP_Fuzzification(FuzzySet, CrispInput);
ConsqMemberGrades = FLP_FuzzyRuleEval(AntMemberGrades,FuzzyRules);
[CrispOutput, OutputMF, X] = FLP_DeFuzzification(ConsqMemberGrades, FuzzySet, 100);

% Map the crisp output into a mesh grid
CrispOutputGrid = zeros(N,N);
for i=1:NC
    CrispOutputGrid(I1C(i),I2C(i)) = CrispOutput(i);
end

% Store the data and labels for the crisp output plot
output = struct('X',X1, ...
                'Y',X2, ...
                'Z',CrispOutputGrid, ...
                'xlabel', FuzzySet.Set{FS1}, ...
                'ylabel',FuzzySet.Set{FS2}, ...
                'zlabel',FuzzySet.Set{end}, ...
                'title', 'Crisp Value Output Visualization');

% Plot the crisp output on a surface chart
surf(output.X, output.Y, output.Z); 
xlabel(output.xlabel);
ylabel(output.ylabel); 
zlabel(output.zlabel);
title(output.title);
end

